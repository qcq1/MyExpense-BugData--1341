2023-12-22 18:52:46.803 28231-28295 SQLiteLog               org.totschnig.myexpenses.debug       E  (1) no such column: display_amount in "SELECT uuid, _id, cat_id, date, name, amount, comment, CASE method_label WHEN 'CHEQUE' THEN '支票' WHEN 'CREDITCARD' THEN '信用卡' WHEN 'DEPOSIT' THEN '存款' WHEN 'DIR
2023-12-22 18:52:46.807 28231-28295 ACRA                    org.totschnig.myexpenses.debug       E  ACRA caught a SQLiteException for org.totschnig.myexpenses.debug
                                                                                                    android.database.sqlite.SQLiteException: no such column: display_amount (code 1 SQLITE_ERROR): , while compiling: SELECT uuid, _id, cat_id, date, name, amount, comment, CASE method_label WHEN 'CHEQUE' THEN '支票' WHEN 'CREDITCARD' THEN '信用卡' WHEN 'DEPOSIT' THEN '存款' WHEN 'DIRECTDEBIT' THEN '直接付款' ELSE method_label END AS method_label, cr_status, number, CASE WHEN transfer_account THEN (SELECT label FROM accounts WHERE _id = transfer_account) END AS transfer_account_label FROM transactions_extended WHERE (account_id = ? AND parent_id is null AND status = 0 AND (display_amount =? OR (cat_id = 0 AND exists(select 1 from transactions children WHERE parent_id = transactions_extended._id AND (display_amount =?)))) AND account_id IN (SELECT _id FROM accounts WHERE exclude_from_totals=0 )) ORDER BY date
                                                                                                    	at android.database.sqlite.SQLiteConnection.nativePrepareStatement(Native Method)
                                                                                                    	at android.database.sqlite.SQLiteConnection.acquirePreparedStatement(SQLiteConnection.java:1124)
                                                                                                    	at android.database.sqlite.SQLiteConnection.prepare(SQLiteConnection.java:687)
                                                                                                    	at android.database.sqlite.SQLiteSession.prepare(SQLiteSession.java:590)
                                                                                                    	at android.database.sqlite.SQLiteProgram.<init>(SQLiteProgram.java:62)
                                                                                                    	at android.database.sqlite.SQLiteQuery.<init>(SQLiteQuery.java:37)
                                                                                                    	at android.database.sqlite.SQLiteDirectCursorDriver.query(SQLiteDirectCursorDriver.java:46)
                                                                                                    	at android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(SQLiteDatabase.java:1712)
                                                                                                    	at android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(SQLiteDatabase.java:1687)
                                                                                                    	at androidx.sqlite.db.framework.FrameworkSQLiteDatabase.query(FrameworkSQLiteDatabase.kt:156)
                                                                                                    	at org.totschnig.myexpenses.provider.BaseTransactionProvider$measureAndLogQuery$1.invoke(BaseTransactionProvider.kt:887)
                                                                                                    	at org.totschnig.myexpenses.provider.BaseTransactionProvider$measureAndLogQuery$1.invoke(BaseTransactionProvider.kt:886)
                                                                                                    	at org.totschnig.myexpenses.provider.BaseTransactionProvider.measure(BaseTransactionProvider.kt:975)
                                                                                                    	at org.totschnig.myexpenses.provider.BaseTransactionProvider.measureAndLogQuery(BaseTransactionProvider.kt:886)
                                                                                                    	at org.totschnig.myexpenses.provider.TransactionProvider.query(TransactionProvider.java:863)
                                                                                                    	at android.content.ContentProvider.query(ContentProvider.java:1578)
                                                                                                    	at android.content.ContentProvider.query(ContentProvider.java:1674)
                                                                                                    	at android.content.ContentProvider$Transport.query(ContentProvider.java:318)
                                                                                                    	at android.content.ContentResolver.query(ContentResolver.java:1249)
                                                                                                    	at android.content.ContentResolver.query(ContentResolver.java:1182)
                                                                                                    	at android.content.ContentResolver.query(ContentResolver.java:1138)
                                                                                                    	at org.totschnig.myexpenses.export.AbstractExporter.export-0E7RQCE(AbstractExporter.kt:199)
                                                                                                    	at org.totschnig.myexpenses.viewmodel.ExportViewModel$startExport$1.invokeSuspend(ExportViewModel.kt:177)
                                                                                                    	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
                                                                                                    	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:108)
                                                                                                    	at kotlinx.coroutines.internal.LimitedDispatcher$Worker.run(LimitedDispatcher.kt:115)
                                                                                                    	at kotlinx.coroutines.scheduling.TaskImpl.run(Tasks.kt:103)
                                                                                                    	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
                                                                                                    	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:793)
                                                                                                    	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:697)
                                                                                                    	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:684)
                                                                                                    	Suppressed: kotlinx.coroutines.internal.DiagnosticCoroutineContextException: [StandaloneCoroutine{Cancelling}@6e8fc87, Dispatchers.IO]
